{"version":3,"sources":["services/index.js","views/Singer/index.js"],"names":["tempHost","window","location","hostname","console","info","ajax","axios","create","baseURL","interceptors","response","use","resp","data","code","RESP_CODE","SUCCESS","ERROR","error","Promise","reject","Error","Singer","props","onItemClick","item","index","history","push","pathname","id","state","artist","singers","list","singerList","map","pinyin","name","style","STYLE_NORMAL","join","0","filter","i","reduce","acc","obj","c","charAt","toUpperCase","postHotArtist","then","setState","toPinYinSinger","artists","className","this","Component"],"mappings":"sOAQMA,EAAQ,iBAAaC,OAAOC,SAASC,SAA7B,SACdC,QAAQC,KAAKL,GACb,IAAMM,EAAOC,IAAMC,OAAO,CAEtBC,QAAST,IAIbM,EAAKI,aAAaC,SAASC,KAAI,SAACC,GAE5B,GAAIA,EAAKC,KAAKC,OAASC,IAAUC,QAC7B,OAAOJ,EAAKC,KACT,GAAID,EAAKC,KAAKC,OAASC,IAAUE,MAEpC,OADAd,QAAQe,MAAR,iCAAuBN,GAChBO,QAAQC,OAAOR,EAAKC,MAE3B,MAAM,IAAIQ,MAAM,iDAMjB,I,6kBCtBDC,E,YAEF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KA4CVC,YAAc,SAACC,EAAMC,GACjBvB,QAAQC,KAAKqB,EAAMC,GACnB,EAAKH,MAAMI,QAAQC,KAAK,CACpBC,SAAS,WAAD,OAAaJ,EAAKK,IAC1BC,MAAO,CAACC,OAAQP,MA/CpB,EAAKM,MAAQ,CACTE,QAAS,IAHE,E,4EAOJC,GACX,IAAMC,EAAaD,EAAKE,KAAI,SAAAX,GAAI,YACzBA,EADyB,CAE5BY,OAAQA,IAAOZ,EAAKa,KAAM,CAACC,MAAOF,IAAOG,eAAeC,KAAK,SAWjE,OAAO,EAAP,GATsB,CAACC,EAAGP,EAAWQ,QAAO,SAAClB,EAAMmB,GAAP,OAAaA,EAAI,OAS7D,GARuBT,EAAWQ,QAAO,SAAClB,EAAMmB,GAAP,OAAaA,GAAK,MAAIC,QAAO,SAACC,EAAKC,GACxE,IAAMC,EAAID,EAAIV,OAAOY,OAAO,GAAGC,cAK/B,OAJKJ,EAAIE,KACLF,EAAIE,GAAK,IAEbF,EAAIE,GAAGpB,KAAKmB,GACLD,IACR,O,0CAIc,IAAD,OAChBK,cACKC,MAAK,SAAAxC,GACFT,QAAQC,KAAKQ,GACb,EAAKyC,SAAS,CACVpB,QAAS,EAAKqB,eAAe1C,EAAKC,KAAK0C,WACxC,WACCpD,QAAQC,KAAK,EAAK2B,MAAME,iB,+BAOpC,OACI,yBAAKuB,UAAW,UACZ,kBAAC,IAAD,CAAUtB,KAAMuB,KAAK1B,MAAME,QAAST,YAAaiC,KAAKjC,mB,GA1CjDkC,aAwDNpC","file":"neteasemusic/static/js/7.897bf7bc.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {RESP_CODE} from \"./config\";\r\n\r\n\r\n// const ajax = axios.create({\r\n//     baseURL: 'http://localhost:8080',\r\n// });\r\n\r\nconst tempHost = `http://${window.location.hostname}:8080`;\r\nconsole.info(tempHost);\r\nconst ajax = axios.create({\r\n    // baseURL: 'http://192.168.43.82:8080',\r\n    baseURL: tempHost,\r\n});\r\n\r\n\r\najax.interceptors.response.use((resp) => {\r\n\r\n    if (resp.data.code === RESP_CODE.SUCCESS) {\r\n        return resp.data;\r\n    } else if (resp.data.code === RESP_CODE.ERROR) {\r\n        console.error(`请求失败：`, resp);\r\n        return Promise.reject(resp.data);\r\n    } else {\r\n        throw new Error('未匹配的状态码');\r\n    }\r\n\r\n\r\n});\r\n\r\nexport const getRecommend = () => {\r\n    return ajax.get('/qqmusic/recommend');\r\n};\r\n\r\nexport const getSingers = () => {\r\n    return ajax.get('/qqmusic/singers');\r\n};\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport pinyin from \"pinyin\";\r\nimport {getSingers} from \"../../services\";\r\nimport {ListView} from \"../../components\";\r\n\r\nimport {postHotArtist} from \"../../services/NetEaseAxios\";\r\n\r\n\r\nclass Singer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            singers: {}\r\n        }\r\n    }\r\n\r\n    toPinYinSinger(list) {\r\n        const singerList = list.map(item => ({\r\n            ...item,\r\n            pinyin: pinyin(item.name, {style: pinyin.STYLE_NORMAL}).join('')\r\n        }));\r\n        const hotSingerList = {0: singerList.filter((item, i) => i < 10)};\r\n        const restSingerList = singerList.filter((item, i) => i >= 10).reduce((acc, obj) => {\r\n            const c = obj.pinyin.charAt(0).toUpperCase();\r\n            if (!acc[c]) {\r\n                acc[c] = [];\r\n            }\r\n            acc[c].push(obj);\r\n            return acc;\r\n        }, {});\r\n        return {...hotSingerList, ...restSingerList};\r\n    }\r\n\r\n    componentDidMount() {\r\n        postHotArtist()\r\n            .then(resp => {\r\n                console.info(resp);\r\n                this.setState({\r\n                    singers: this.toPinYinSinger(resp.data.artists),\r\n                }, () => {\r\n                    console.info(this.state.singers);\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'singer'}>\r\n                <ListView list={this.state.singers} onItemClick={this.onItemClick}></ListView>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onItemClick = (item, index) => {\r\n        console.info(item, index);\r\n        this.props.history.push({\r\n            pathname: `/singer/${item.id}`,\r\n            state: {artist: item}\r\n        });\r\n    }\r\n}\r\n\r\nexport default Singer;"],"sourceRoot":""}